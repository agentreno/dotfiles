---

- name: setup devbox
  hosts: 127.0.0.1
  connection: local
  become: yes
  gather_facts: no

  vars_prompt:
    - name: "git_email"
      prompt: "What email should be used for Git commits?"
      private: no

    - name: "user_password"
      prompt: "What should the user password be?"
      private: yes

    - name: "create_user"
      prompt: "Should a new user be created?"
      private: no

    - name: "user_name"
      prompt: "What is the existing or new user name?"
      private: no

  tasks:

  - name: update apt
    apt: update_cache=yes
  - name: upgrade apt
    apt: upgrade=yes

  - name: install git
    apt:
      name: git

  - name: install curl
    apt:
      name: curl

  - name: install vim
    apt:
      name: vim

  - name: install tmux
    apt:
      name: tmux

  - name: install xclip
    apt:
      name: xclip

  - name: install zsh
    apt:
      name: zsh

  - name: install kubectl
    block:
      - name: add google apt key
        ansible.builtin.apt_key:
          url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
          state: present
      - name: add kubernetes apt repo
        ansible.builtin.apt_repository:
          repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      - name: update apt
        apt: update_cache=yes
      - name: install kubectl package
        apt:
          name: kubectl

  - name: install github cli
    block:
      - name: add github apt key
        ansible.builtin.apt_key:
          keyserver: keyserver.ubuntu.com
          id: C99B11DEB97541F0
          state: present
      - name: add github apt repo
        ansible.builtin.apt_repository:
          repo: deb https://cli.github.com/packages bionic main
      - name: update apt
        apt: update_cache=yes
      - name: install github cli apt package
        apt:
          name: gh

  - name: install docker ce
    block:
      - name: add github apt key
        ansible.builtin.apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
      - name: add docker apt repo
        ansible.builtin.apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
      - name: update apt
        apt: update_cache=yes
      - name: install docker-ce apt package
        apt:
          name: docker-ce

  - name: install minikube
    get_url:
      url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
      dest: /usr/local/bin/minikube
      mode: a+rx

  - name: set git email
    command: git config --global user.email {{ git_email }}

  - name: create my user
    when: create_user == "yes"
    register: user_output
    user:
      name: "{{ user_name }}"
      generate_ssh_key: yes
      ssh_key_bits: 4096
      ssh_key_file: .ssh/id_rsa
      password: "{{ user_password | password_hash('sha512') }}"
      groups: "sudo"

  - name: continue as karl
    become_user: "{{ user_name }}"
    block:

      - name: checkout dotfiles repo
        git:
          repo: https://github.com/agentreno/dotfiles
          dest: /home/{{ user_name }}/dotfiles
          accept_hostkey: yes

      - name: symlink vimrc from dotfiles to home folder
        file:
          path: /home/{{ user_name }}/.vimrc
          src: /home/{{ user_name }}/dotfiles/vimfiles/vimrc
          state: link
          force: yes

      - name: symlink vimrc from dotfiles to home folder
        file:
          path: /home/{{ user_name }}/.vim
          src: /home/{{ user_name }}/dotfiles/vimfiles
          state: link
          force: yes

      - name: symlink tmux config from dotfiles to home folder
        file:
          path: /home/{{ user_name }}/.tmux.conf
          src: /home/{{ user_name }}/dotfiles/.tmux.conf
          state: link
          force: yes

      - name: symlink git config
        file:
          path: /home/{{ user_name }}/.gitconfig
          src: /home/{{ user_name }}/dotfiles/.gitconfig
          state: link
          force: yes

      - name: setup build environment for python
        become_user: root
        apt:
          name: "{{ packages }}"
        vars:
          packages:
          - make
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - curl
          - llvm
          - libncurses5-dev
          - xz-utils
          - tk-dev
          - libxml2-dev
          - libxmlsec1-dev
          - libffi-dev

      - name: install pyenv
        shell: curl https://pyenv.run | bash
        ignore_errors: yes

      - name: setup pyenv
        script: /home/{{ user_name }}/dotfiles/setup_pyenv.sh

      - name: make flake8 config directory
        file:
          path: /home/{{ user_name }}/.config
          state: directory

      - name: symlink flake8 config
        file:
          path: /home/{{ user_name }}/.config/flake8
          src: /home/{{ user_name }}/dotfiles/.flake8
          state: link
          force: yes

      - name: run zsh install
        script: /home/{{ user_name }}/dotfiles/install-oh-my-zsh.sh
        ignore_errors: yes

      - name: set zsh as default shell
        become_user: root
        shell: chsh {{ user_name }} -s /usr/bin/zsh

      - name: symlink zsh config
        file:
          path: /home/{{ user_name }}/.zshrc
          src: /home/{{ user_name }}/dotfiles/.zshrc
          state: link
          force: yes
